---
import { type CollectionEntry, getCollection } from "astro:content";
import TagWork from "@layouts/TagWork.astro";
import { getUniqueWorkTags } from "@utils/getUniqueTags";
import { getWorkByTag } from "@utils/getItemsByTag";
import getPageNumbers from "@utils/getPageNumbers";
import getPagination from "@utils/getPagination";

export interface Props {
  work: CollectionEntry<"work">;
  tag: string;
  tagName: string;
}

export async function getStaticPaths() {
  const work = await getCollection("work");

  const tags = getUniqueWorkTags(work);

  return tags.flatMap(({ tag, tagName }) => {
    const tagWork = getWorkByTag(work, tag);
    const totalPages = getPageNumbers(tagWork.length);

    return totalPages.map(page => ({
      params: { tag, page },
      props: { tag, tagName },
    }));
  });
}

const { page } = Astro.params;
const { tag, tagName } = Astro.props;

const work = await getCollection("work", ({ data }) => !data.draft);

const worksByTag = getWorkByTag(work, tag);

const pagination = getPagination({
  items: worksByTag,
  page,
});
---

<TagWork {...pagination} {tag} {tagName} />
